name: 'IIS Service Action'

description: 'This action will create an on-premises IIS website'

inputs:
  server:
    description: 'The name of the target server'
    required: true
  website-name:
    description: 'The name of the website'
    default: ''
    required: true
  app-pool-name:
    description: 'The name of the app pool'
    required: true
  website-host-header:
    description: 'The host-header the web site should respond to'
    default: ''
    required: true
  website-path:
    description: 'The local directory location of the web site, i.e., "c:\inetpub\webapp"'
    default: ''
    required: true
  website-cert-path:
    description: 'The private cert file path for site https binding'
    default: ''
    required: true
  website-cert-friendly-name:
    description: "The private cert's friendly name"
    default: ''
    required: true
  website-cert-password:
    description: "The private cert's file password"
    default: ''
    required: true
  service-account-id:
    description: 'The service account name'
    required: true
  service-account-password:
    description: 'The service account password'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Action
      id: action
      shell: powershell
      run: |
        $secure_password = ConvertTo-SecureString -String '${{ inputs.service-account-password }}' -AsPlainText -Force
        $secure_cert_password = ConvertTo-SecureString -String $'{{ inputs.website-cert-password }}' -AsPlainText -Force
        ${{ github.action_path }}/iis_action.ps1 `
          -server '${{ inputs.server }}' `
          -website_name '${{ inputs.website-name }}' `
          -app_pool_name '${{ inputs.app-pool-name }}' `
          -website_host_header '${{ inputs.website-host-header }}' `
          -website_path '${{ inputs.website-path }}' `
          -website_cert_path '${{ inputs.website-cert-path }}' `
          -website_cert_password $secure_cert_password `
          -website_cert_friendly_name '${{ inputs.website-cert-friendly-name }}' `
          -user_id '${{ inputs.service-account-id }}' `
          -password $secure_password
